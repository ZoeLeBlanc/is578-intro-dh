Poetry visualization is used mostly to highlight patterns detected using computational tools. These tools aim to help scholars carry out the critical analysis of poetry and are based on data mining algorithms and visual tools (Bradford Paley). The purpose of these tools is to synthesize and bring forward certain key elements such as the structure of the narrative, the organization of the poem, the language elements, and the metaphors employed (Chaturvedi, 2011). This purpose is achieved by intentionally bringing forward the graphical elements of poetry by carefully layering annotations (Tufte, 1990) based on literary criticism, thus creating new methods to analyze poetry. Additionally, these visualization tools can place special emphasis in viewing the poems from different perspectives (Meneses et al., 2011) and visualizing the textual representation of the poetic texts in their formal structure (Audenaert et al., 2007).

However, poetry visualization can also be used to create new forms of expression. These new forms of expression apply deformation and transformation techniques to the original poem to create a new art form that in some cases retains the original characteristics of the poem. Examples of this transformation include Visualizing Text by Diana Lange (Lange), Poetry on the Road (Schaffors et al.), Text Universe (Rapati) and Ira Greenberg’s Syntactic Arthropod (Greenberg).

We believe that the tools used nowadays to visualize poetry have three important characteristics. First, the visualizations are created after the poem has been published. Second, the scholars who create and use the visualization usually do not have any relationship to the author who created the original literary work. Third, the visualizations are a direct consequence of the transformations applied to the original text. When we put together all three characteristics we are left with a visualization tool that serves its purpose when highlighting certain passages in a poem, but does not have any effect or significant influence on the author as the poem was written beforehand.

In our research, we are attempting to challenge the three notions that in our opinion have defined how poetry is visualized. For this purpose, we are building an interactive framework to write and visualize poetry. We have named this framework “Ambiances”. The main goal of our framework is to create a tool that affords a symbiotic relationship between writing and visualizing a poem. In our framework, the process of writing a new poem influences its resulting visualization and the visualization also affects the process of writing. At first, we envisioned mechanisms that allowed the author to carry out the writing and visualizing processes interactively. However, our tool also brings forth new possibilities of interaction when a different author designs the visualization. In this case, this interaction between the author of the poem and the designer of the visualization can engage in collaborative authorship. Additionally, our prototype borrows some of the concepts behind Storyspace (Bernstein, 2002, Bernstein, 2009). One of our goals is to design a tool that allows the author to create visualizations (Bernstein, 2009) that give aesthetic clues about the contents of the narrative.

We developed the first prototype of the system using Processing , an open-source programming language designed specifically for visual artists and designers with the purpose of teaching the fundamentals of programming. Casey Reas and Ben Fry started Processing as a project in 2001. However, Processing has evolved through the years and it is used beyond its original pedagogical scope. Nowadays, Processing is also widely used by visual artists and designers to create new ways of displaying of data, animations and digital artworks.

Using Processing has some obvious advantages that are concerned how with how the source code is executed and its portability. Processing is an extension of the Java Imaging Library, so Processing files can be executed as Java programs. Additionally, the Processing language is also available as a Javascript port , making it possible to run this system entirely on a modern web browser. However, we believe that the main advantage derived from using Processing is the simplification of the development process by encapsulating the complex data structures into simpler objects and methods.

The Ambiances framework is composed of different areas or “environments”. The first environment is a text editor where the author writes and composes the poem. The second area consists of a minimalist-programming environment optimized for writing Processing code. The third is a visualization environment that uses the poem and the source code as input materials to create a resulting visualization interactively. We specifically chose to emphasize the visualization environment and make it an integral part of the system. Figure 1 shows a screenshot of a prototype of our framework using the poem “Bright Star” by John Keats.


Figure 1.
Ambiances and a visualization of the poem “Bright Star” by John Keats.

The layout of the environments in the user interface allows the authors to engage in interesting ways. People have a natural tendency to create visual structures to organize resources when they share a workspace, which helps them to communicate interpretations and coordinate activities (Shipman et al., 2001a). This tendency towards the creation of visual structures facilitates the exchange and interpretation of visual information. In our prototype, the environments are linked together in a single widow frame.

The layout of the environments allows users to collaborate synchronously: authoring the poem and the visualization at the same time, or asynchronously: working at different times. Additionally, the interface encourages the authors to receive instant feedback through the visualization. Given that the authors cannot critique each other directly and can communicate through the visualization, Ambiances provides an unobtrusive way of writing poetry collaboratively that encourages unexpected interactions. For example: in the specific case where the visual elements are developing in syncopated opposition, we believe that the visualization and the interactions will provide hints that will allow the author of the poem to modify certain figures of speech accordingly. Our vision also allows authors to collaborate remotely from different locations. We will place special emphasis on evaluating the interactions in this case, as authors will communicate mostly through the visualization environment. However, at this point we do not discard allowing the authors to communicate using other means.

We plan on evaluating the affordances and the implications of our system by recording and analyzing the user interactions with the system prototype. This method of evaluation has been used in the past successfully in hypertext systems. In the specific case of the Visual Knowledge Builder (VKB), Shipman et al. recorded, logged and analyzed user interactions and found that their user interface created a strong relationship among documents, environments and their evolution through time (Shipman et al., 2001b). Similarly, our system allows authors to save sets of documents for a later time. This allows authors to expand their creative and explorative processes through multiple sessions, thus making their use of the system into a more complete experience.

In the end, developing the prototype for Ambiances left us with questions that we still need to answer. One of them is if Ambiances will work better with authors in specific genres, writing styles, languages and cultural backgrounds. It is not unconventional to assume that it will, but we still need proof. For this purpose, we are gathering a diverse group of authors to participate in this study. The feedback that we will collect from the authors and their interactions will be included in the new iterations of the system.

The contribution of our research is to explore the advantages, issues and challenges that a framework for writing and visualizing poetry interactively and can provide. More specifically, we are interested in the feedback that authors obtain in real time from the visualizations and how it can affect their writing. Additionally, we will also address the multiple authorship issues and the implications that will surface from the use of our framework. In the end, our research aims to implement, analyze and study new interactive methods for creating and visualizing poetry.

References
Flare — Data Visualization for the Web http://flare.prefuse.org (accessed 1 November 2012.)
Juxta — Collation Software for Scholars http://www.juxtasoftware.org (accessed 1 November 2012.)
Many Eyes http://www-958.ibm.com/software/data/cognos/manyeyes/ (accessed 1 November 2012.)
Processing.js http://www.processingjs.org/ (accessed 22 August 2012.)
Processing.org http://www.processing.org/ (accessed 2 April 2012).
Audenaert, N., U. Karadkar, E. Mallen, R. Furuta, and S. Tonner Viewing Texts: An Art-Centered Representation of Picasso’s Writings. Digital Humanities 2007, University of Illinois, Urbana-Champaign. 14- 16.
Bernstein, M. (2002). Storyspace 1. Proceedings of the thirteenth ACM conference on Hypertext and hypermedia — Hypertext '02. College Park, Maryland, USA.
Bernstein, M. (2009). On hypertext narrative. Proceedings of the 20th ACM conference on Hypertext and hypermedia — Ht '09. Torino, Italy.
Bradford Paley, W. TextArc.org Home http://textarc.org (accessed 1 November 2012.)
Chaturvedi, M. (2011). Visualization of TEI Encoded Texts in Support of Close Reading. M.A. thesis, Miami University.
Greenberg, I. syntactic_arthropod: Built with Processing http://iragreenberg.com/poetess/viz02/ (accessed 22 August 2012).
Lange, D. Visualizing text — OpenProcessing http://openprocessing.org/sketch/44133. (no date).
Meneses, L., C. Monroy, R. Furuta, and E. Mallen (2011). Computational Approaches to a Catalogue Raisonné of Pablo Picasso's Works. Interdisciplinary Journal for Germanic Linguistics and Semiotic Analysis.
Rapati, T. Text Universe http://openprocessing.org/sketch/10383 (accessed August 22,2012.)
Schaffors, A., B. Muller, and F. Pfeffer esono.com — Poetry on the Road 2006 http://www.esono.com/boris/projects/poetry06/ (accessed 22 August 2012.)
Shipman, F., R. Airhart, H. Hsieh, P. Maloor, P. Moore, J. M. Moore, and D. Shah Visual and spatial communication and task organization using the visual knowledge builder. Proceedings of the 2001 International ACM SIGGROUP Conference on Supporting Group Work, 2001 Boulder, Colorado, USA. 500325: ACM, 260-269.
Shipman, F., H. Hsieh, P. Maloor, and J. M. Moore The visual knowledge builder: a second generation spatial hypertext. Proceedings of the twelfth ACM conference on Hypertext and Hypermedia — Hypertext '01, 2001b Arhus, Denmark. 113-122.
Tufte, E. (1990). Envisioning Information, Cheshire, CT, Graphics Press.